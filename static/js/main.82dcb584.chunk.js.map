{"version":3,"sources":["App.js","index.js"],"names":["sounds","key","mp3","App","id","className","map","sound","idx","text","audio","DrumPad","props","playSound","current","play","parent","parentNode","classList","add","querySelector","innerText","React","createRef","this","addEventListener","e","target","remove","onClick","ref","src","Component","document","toUpperCase","getElementById","currentTime","ReactDOM","render"],"mappings":"wNAIMA,EAAS,CACb,CACEC,IAAK,IACLC,IAAK,4DAEP,CACED,IAAK,IACLC,IAAK,4DAEP,CACED,IAAK,IACLC,IAAK,4DAEP,CACED,IAAK,IACLC,IAAK,8DAEP,CACED,IAAK,IACLC,IAAK,4DAEP,CACED,IAAK,IACLC,IAAK,0DAEP,CACED,IAAK,IACLC,IAAK,8DAEP,CACED,IAAK,IACLC,IAAK,8DAEP,CACED,IAAK,IACLC,IAAK,2DAIHC,EAAM,kBACV,sBAAKC,GAAG,UAAUC,UAAU,UAA5B,UACE,8CACCL,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACV,cAAC,EAAD,CAASC,KAAMF,EAAMN,IAAeS,MAAOH,EAAML,KAAlBM,UAK/BG,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAYRC,UAAY,WACV,EAAKH,MAAMI,QAAQC,OAEnB,IAAMX,EAAK,EAAKM,MAAMI,QAAQV,GAExBY,EAAS,EAAKN,MAAMI,QAAQG,WAClCD,EAAOE,UAAUC,IAAI,UAELH,EAAOC,WACfG,cAAc,MAAMC,UAA5B,UAA2CjB,EAA3C,gBAnBA,EAAKM,MAAQY,IAAMC,YAHF,E,qDAMnB,WACEC,KAAKd,MAAMI,QAAQW,iBAAiB,SAAS,SAACC,GAC7BA,EAAEC,OAAOV,WACjBC,UAAUU,OAAO,e,oBAgB5B,WAAU,IAAD,EACiBJ,KAAKZ,MAArBH,EADD,EACCA,KAAMC,EADP,EACOA,MAEd,OACE,sBAAKL,UAAU,WAAWwB,QAASL,KAAKX,UAAWT,GAAE,eAAUK,GAA/D,UACGA,EACD,uBAAOqB,IAAKN,KAAKd,MAAOqB,IAAKrB,EAAOL,UAAU,OAAOD,GAAIK,W,GAhC3Ca,IAAMU,WAsC5BC,SAASR,iBAAiB,WAAW,SAACC,GACpC,IAAMtB,EAAKsB,EAAEzB,IAAIiC,cAEXxB,EAAQuB,SAASE,eAAe/B,GAEtC,GAAGM,EAAO,CACRA,EAAM0B,YAAc,EACpB,IAAMpB,EAASN,EAAMO,WACrBD,EAAOE,UAAUC,IAAI,UAELH,EAAOC,WACfG,cAAc,MAAMC,UAA5B,UAA2CjB,EAA3C,eACAM,EAAMK,WAKKZ,QACfkC,IAASC,OAAO,cAAC,EAAD,IAASL,SAASE,eAAe,iBCvGjDE,IAASC,OAAO,cAAC,EAAD,IAASL,SAASE,eAAe,mB","file":"static/js/main.82dcb584.chunk.js","sourcesContent":["import ReactDOM from 'react-dom';\nimport React from 'react';\nimport './App.css';\n\nconst sounds = [\n  {\n    key: 'Q',\n    mp3: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n  },\n  {\n    key: 'W',\n    mp3: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n  },\n  {\n    key: 'E',\n    mp3: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n  },\n  {\n    key: 'A',\n    mp3: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n  },\n  {\n    key: 'S',\n    mp3: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n  },\n  {\n    key: 'D',\n    mp3: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n  },\n  {\n    key: 'Z',\n    mp3: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n  },\n  {\n    key: 'X',\n    mp3: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n  },\n  {\n    key: 'C',\n    mp3: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n  },\n];\n\nconst App = () => (\n  <div id=\"display\" className=\"display\">\n    <h1>Play a sound</h1>\n    {sounds.map((sound, idx) => (\n      <DrumPad text={sound.key} key={idx} audio={sound.mp3} />\n    ))}\n  </div>\n);\n\nclass DrumPad extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.audio = React.createRef(); //what is this actually creating a reference to?\n  }\n  \n  componentDidMount() {\n    this.audio.current.addEventListener('ended', (e) => {\n      const parent = e.target.parentNode;\n      parent.classList.remove('active');\n    });\n  }\n  \n  playSound = () => {\n    this.audio.current.play();\n    \n    const id = this.audio.current.id;\n    \n    const parent = this.audio.current.parentNode;\n    parent.classList.add('active');\n    \n    const display = parent.parentNode; //how is parent.parentNode targeting <div id=\"display\"..?\n    display.querySelector('h1').innerText = `${id} is playing`;\n  }\n  \n  render() {\n    const { text, audio } = this.props;\n  \n    return (\n      <div className=\"drum-pad\" onClick={this.playSound} id={`drum-${text}`}>\n        {text}\n        <audio ref={this.audio} src={audio} className=\"clip\" id={text} />\n      </div>\n    )\n  }\n}\n    \ndocument.addEventListener('keydown', (e) => {\n  const id = e.key.toUpperCase(); //what exactly is 'key' here? it is the actual key, and 'e' is the keyboard event, right?\n  // console.log(e)\n  const audio = document.getElementById(id);\n  \n  if(audio) {\n    audio.currentTime = 0;\n    const parent = audio.parentNode;\n    parent.classList.add('active');\n    \n    const display = parent.parentNode;\n    display.querySelector('h1').innerText = `${id} is playing`;\n    audio.play();\n  }\n});\n\n\nexport default App;\nReactDOM.render(<App />, document.getElementById(\"drum-machine\"));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById(\"drum-machine\"));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}